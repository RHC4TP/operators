apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [{
       "apiVersion": "apm.newrelic.com/v1alpha1",
       "kind": "NewRelic",
       "metadata": {
          "name": "example-newrelic"
       },
       "spec": {
          "image": {
             "name": "registry.connect.redhat.com/newrelic-openshift/newrelic-infrastructure-k8s-1",
             "tag": "latest",
             "pullPolicy": "IfNotPresent"
          },
          "newrelic": {
             "zone": "k8s-cluster-name",
             "leaderElectorPort": 42655,
             "agent": {
                "key": "YOUR-KEY-GOES-HERE",
                "name": "newrelic-agent",
                "endpoint": {
                   "host": "saas-us-west-2.newrelic.io",
                   "port": 443
                }
             }
          },
          "podAnnotations": {},
          "serviceAccount": "newrelic-agent",
          "tolerations": [],
          "computeResources": {
             "requests": {
                "memory": 512,
                "cpu": 0.5
             },
             "limits": {
                "memory": 512,
                "cpu": 1.5
             }
          }
       }
      }]
    categories: "Monitoring,OpenShift Optional"
    capabilities: "Basic Install"
    certified: "false"
    containerImage: quay.io/rhc4tp/newrelic-operator:v0.0.3
    createdAt: 2019-04-18T12:59:59Z
    description: Deploy the NewRelic agent from a helm chart onto your Kubernetes or OpenShift cluster
    repository: https://github.com/RHC4TP/operators/tree/master/partners/newrelic-operator
    support: Red Hat Connect
  name: newrelic-operator.v0.0.3
  namespace: "placeholder"
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: NewRelic Operator by Red Hat Partner Connect
        displayName: NewRelic Operator
        kind: NewRelic
        name: newrelics.apm.newrelic.com
        resources:
          - kind: DaemonSet
            name: ""
            version: apps/v1
          - kind: Pod
            name: ""
            version: v1
          - kind: Secret
            name: ""
            version: v1
          - kind: ConfigMap
            name: ""
            version: v1
        specDescriptors:
          - description: NewRelic agent container image name
            displayName: Image Name
            path: image.name
          - description: NewRelic agent container image tag
            displayName: Image Tag
            path: image.tag
          - description: Image pull policy stating whether or not to pull from the local image store
            displayName: Pull Policy
            path: image.pullPolicy
          - description: Zone Name given to this environment for NewRelic
            displayName: Zone Name
            path: newrelic.zone
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes:core:v1:ConfigMap'
          - description: Port that the leader elector will listen on
            displayName: Leader Elector Port
            path: newrelic.leaderElectorPort
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes:core:v1:ConfigMap'
          - description: NewRelic agent key
            displayName: Agent Key
            path: newrelic.agent.key
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes:core:v1:Secret'
          - description: Name to use for NewRelic agent k8s resources
            displayName: K8s Name
            path: newrelic.agent.name
          - description: Endpoint hostname that NewRelic agent will connect to
            displayName: Endpoint Hostname
            path: newrelic.agent.endpoint.host
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes:core:v1:ConfigMap'
          - description:  Endpoint Port that NewRelic agent will connect to
            displayName: Endpoint Port
            path: newrelic.agent.endpoint.port
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes:core:v1:ConfigMap'
          - description:  Annotations to be added to pods
            displayName: Pod Annotations
            path: podAnnotations
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes:core:v1:Pod'
          - description: Service account name used to deploy NewRelic agent pods
            displayName: Service Account Name
            path: serviceAccount
          - description: Tolerations for pod assignment
            displayName: Tolerations
            path: tolerations
          - description: Define resources requests and limits for individual Pods
            displayName: Compute Resources
            path: computeResources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
        statusDescriptors:
          - description: Current deployed state
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1alpha1
  description: |
    This is an Operator for NewRelic, developed using the NewRelic helm chart available at [Newrelic's GitHub](https://github.com/helm/charts/tree/master/stable/newrelic-infrastructure).
    
    The operator will deploy the NewRelic agent (using the helm chart) on your Kubernetes or OpenShift cluster as a Daemonset.

    ## Prerequisites
    The NewRelic Operator will (by default) deploy the latest version of Instana from the Red Hat Container Catalog.
    The image will pull from the [Red Hat Container Catalog](https://access.redhat.com/containers), which will require the following:

    * RHN account (https://access.redhat.com)
    * RHCC Image pull secret in your project/namespace or [Red Hat Container Registry Authentication](https://access.redhat.com/RegistryAuthentication) setup on your OpenShift cluster

    To create an `rhcc` secret using docker (requires root/sudo or you must be in the docker group):
    ```
    # docker login -u <username> registry.connect.redhat.com
    Password:
    Login Succeeded
    # oc create secret generic rhcc --from-file=.dockerconfigjson=$HOME/.docker/config.json --type=kubernetes.io/dockerconfigjson
    ```

    To create an `rhcc` secret using podman:
    ```
    $ podman login -u <username> registry.connect.redhat.com
    Password:
    Login Succeeded!
    $ oc create secret generic rhcc --from-file=.dockerconfigjson=$XDG_RUNTIME_DIR/containers/auth.json --type=kubernetes.io/dockerconfigjson
    ```

    To link the `rhcc` secret to the `default` service account to use as an image pull secret in the current project/namespace:
    ```
    $ oc secrets link default rhcc --for=pull
    ```

    ## Required Parameters

    There is only one required parameter, and that is the Agent Key available by logging into [NewRelic](https://infrastructure.newrelic.com).

    Note that the Agent Key is kept in a base64-encoded K8s Secret, however the key is also visible as plain text within the Custom Resource spec.

    Values listed below are relative to the `spec:` field in the Custom Resource.

    * **newrelic.agent.key** - Your NewRelic Agent Key

    ## Advanced Tunables

    This is a list of all supported (but optional) parameters that can be passed to the Operator via the Custom Resource:

    Values are relative to the `spec:` field in the Custom Resource.

    * **image.name** - The full path to the NewRelic container image (defaults to `registry.connect.redhat.com/newrelic-openshift/newrelic-infrastructure-k8s-1`)
    * **image.tag** - The container image tag (defaults to `:latest`)
    * **image.pullPolicy** - The pullPolicy to use when pulling the image (defaults to `IfNotPresent`)
    * **newrelic.agent.name** - Name to use for the K8s resources created by the Operator (defaults to `newrelic-agent`)
    * **newrelic.agent.endpoint.host** - The hostname of the endpoint that the agent will connect to  (defaults to `saas-us-west-2.newrelic.com`)
    * **newrelic.agent.endpoint.port** - The TCP port that the agent will connect on
    * **podAnnotations** - Annotations to be added to pods (defaults to an empty key/value dictionary)
    * **serviceAccount** - The name of the service account used to deploy NewRelic (NOTE: This **must** match what is defined in the ClusterServiceVersion under `clusterpermissions:`)
    * **tolerations** - Tolerations for pod assignment (defaults to an empty list/array)
    * **computeResources** - Pod resource limits (defaults are `requests.cpu: 0.5`, `requests.memory: 512`, `limits.cpu: 1.5 ` and `limits.memory: 512`)
  displayName: NewRelic Operator
  icon:
    - base64data: PHN2ZyBpZD0iQ01ZS18tX2xvZ28iIGRhdGEtbmFtZT0iQ01ZSyAtIGxvZ28iIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmlld0JveD0iMCAwIDczNy45NCAxMzIuMDMiPjxkZWZzPjxzdHlsZT4uY2xzLTF7ZmlsbDojMDA4Yzk5O30uY2xzLTJ7ZmlsbDojNzBjY2QzO308L3N0eWxlPjwvZGVmcz48dGl0bGU+TmV3UmVsaWMtbG9nby1idWc8L3RpdGxlPjxnIGlkPSJvdXRsaW5lcyI+PHBhdGggZD0iTTI2NC44NiwxMTEuMjUsMjQ0LjY3LDY4LjkzYy00LjgyLTEwLTkuNzctMjEuMzYtMTEuNDYtMjYuN2wtLjM5LjM5Yy42NSw3LjU1Ljc4LDE3LjA2LjkxLDI1bC41Miw0My42M0gyMTkuNTRWMjEuMTNoMTYuOTNsMjEuODgsNDRhMTY0LjEyLDE2NC4xMiwwLDAsMSw5LjI1LDIzLjE4bC4zOS0uMzljLS4zOS00LjU2LTEuMy0xNy40NS0xLjMtMjUuNjZsLS4yNi00MS4xNWgxNC4ydjkwLjEyWiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTYuOSAtNy4yNykiLz48cGF0aCBkPSJNMzA3LjQ0LDgyLjIxdjFjMCw5LjEyLDMuMzksMTguNzUsMTYuMjgsMTguNzUsNi4xMiwwLDExLjQ2LTIuMjEsMTYuNDEtNi41MWw1LjYsOC43M2EzNS42LDM1LjYsMCwwLDEtMjMuNyw4LjczYy0xOC42MiwwLTMwLjM0LTEzLjQxLTMwLjM0LTM0LjUxLDAtMTEuNTksMi40Ny0xOS4yOCw4LjIxLTI1Ljc5LDUuMzQtNi4xMiwxMS44NS04Ljg2LDIwLjE5LTguODZhMjUuNDUsMjUuNDUsMCwwLDEsMTguMSw2Ljc3YzUuNzMsNS4yMSw4LjYsMTMuMjgsOC42LDI4LjY1djNaTTMyMC4wNyw1NC42Yy04LjA3LDAtMTIuNSw2LjM4LTEyLjUsMTcuMDZoMjQuMzVDMzMxLjkyLDYxLDMyNy4yNCw1NC42LDMyMC4wNyw1NC42WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTYuOSAtNy4yNykiLz48cGF0aCBkPSJNNDIzLDExMS41MUg0MDkuNTRsLTguMDctMzAuMzRjLTIuMDgtNy44MS00LjMtMTgtNC4zLTE4aC0uMjZzLTEsNi41MS00LjMsMTguNjJsLTcuOTQsMjkuNjlIMzcxLjI1bC0xOC02NS4yNSwxNC4yLTIsNy4xNiwzMS45MWMxLjgyLDguMiwzLjM5LDE3LjMyLDMuMzksMTcuMzJoLjM5YTE3OC45MSwxNzguOTEsMCwwLDEsMy43OC0xNy43MWw4LjQ3LTMwLjQ3aDE0LjA3TDQxMi4xNCw3NWMyLjc0LDEwLjY4LDQuMTcsMTguNzUsNC4xNywxOC43NWguMzlzMS41Ni0xMCwzLjI2LTE3LjcxbDYuNzctMzAuNzRoMTQuODVaIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgtNi45IC03LjI3KSIvPjxwYXRoIGQ9Ik01MjUuMDUsMTExLjI1bC03LjgxLTEzLjk0QzUxMSw4Ni4yNSw1MDYuODIsODAsNTAxLjg3LDc1QTcuNjQsNy42NCwwLDAsMCw0OTYsNzIuMzF2MzguOTRINDgxLjI5VjIxLjEzaDI3LjQ4YzIwLjE5LDAsMjkuMywxMS43MiwyOS4zLDI1Ljc5LDAsMTIuODktOC4zMywyNC43NS0yMi40LDI0Ljc1LDMuMjYsMS42OSw5LjI1LDEwLjQyLDEzLjkzLDE4bDEzLjI4LDIxLjYyWm0tMjAuODQtNzhINDk2VjYxLjc3aDcuNjhjNy44MSwwLDEyLTEsMTQuNzItMy43OCwyLjQ3LTIuNDcsNC02LjI1LDQtMTAuOTRDNTIyLjQ1LDM3LjkzLDUxNy41LDMzLjI0LDUwNC4yMSwzMy4yNFoiIHRyYW5zZm9ybT0idHJhbnNsYXRlKC02LjkgLTcuMjcpIi8+PHBhdGggZD0iTTU2Mi41NSw4Mi4yMXYxYzAsOS4xMiwzLjM5LDE4Ljc1LDE2LjI4LDE4Ljc1LDYuMTIsMCwxMS40Ni0yLjIxLDE2LjQxLTYuNTFsNS42LDguNzNhMzUuNiwzNS42LDAsMCwxLTIzLjcsOC43M2MtMTguNjIsMC0zMC4zNC0xMy40MS0zMC4zNC0zNC41MSwwLTExLjU5LDIuNDctMTkuMjgsOC4yMS0yNS43OSw1LjM0LTYuMTIsMTEuODUtOC44NiwyMC4xOS04Ljg2YTI1LjQ1LDI1LjQ1LDAsMCwxLDE4LjEsNi43N2M1LjczLDUuMjEsOC42LDEzLjI4LDguNiwyOC42NXYzWk01NzUuMTksNTQuNmMtOC4wNywwLTEyLjUsNi4zOC0xMi41LDE3LjA2SDU4N0M1ODcsNjEsNTgyLjM1LDU0LjYsNTc1LjE5LDU0LjZaIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgtNi45IC03LjI3KSIvPjxwYXRoIGQ9Ik02MjguNzEsMTEyLjY5Yy0xNC40NiwwLTE0LjQ2LTEzLTE0LjQ2LTE4LjYyVjM3LjkzQTEwNi43MywxMDYuNzMsMCwwLDAsNjEzLDE4LjY2bDE0LjcyLTMuMjZjMSw0LDEuMTcsOS41MSwxLjE3LDE4LjFWODkuMzdjMCw4Ljg2LjM5LDEwLjI5LDEuNDMsMTEuODVhNCw0LDAsMCwwLDQuNjksMWwyLjM0LDguODZBMjIuNDQsMjIuNDQsMCwwLDEsNjI4LjcxLDExMi42OVoiIHRyYW5zZm9ybT0idHJhbnNsYXRlKC02LjkgLTcuMjcpIi8+PHBhdGggZD0iTTY1My41OCwzNS41OWE5LjM0LDkuMzQsMCwwLDEtOS4yNS05LjUxLDkuNDQsOS40NCwwLDEsMSw5LjI1LDkuNTFabS03LjE2LDc1LjY3VjQ2LjRsMTQuNDYtMi42MXY2Ny40NloiIHRyYW5zZm9ybT0idHJhbnNsYXRlKC02LjkgLTcuMjcpIi8+PHBhdGggZD0iTTcwMS45LDExMi45NWMtMTgsMC0yOC0xMi42My0yOC0zMy44NiwwLTI0LDE0LjMzLTM1LjQyLDI5LTM1LjQyLDcuMTYsMCwxMi4zNywxLjY5LDE4LjIzLDcuMTZMNzE0LDYwLjMzYy0zLjkxLTMuNTItNy4yOS01LjA4LTExLjA3LTUuMDhhMTEuMiwxMS4yLDAsMCwwLTEwLjQyLDYuNjRjLTIsNC0yLjczLDEwLjE2LTIuNzMsMTguMzYsMCw5LDEuNDMsMTQuNzIsNC40MywxOGExMS41OCwxMS41OCwwLDAsMCw4LjczLDMuNzhjNC41NiwwLDktMi4yMSwxMy4yOC02LjUxbDYuNzcsOC43M0M3MTcsMTEwLjIxLDcxMC43NSwxMTIuOTUsNzAxLjksMTEyLjk1WiIgdHJh
      mediatype: "image/png"
  install:
    spec:
      deployments:
      permissions:
        - rules:
          - apiGroups:
            - ""
            resources:
            - pods
            - services
            - endpoints
            - persistentvolumeclaims
            - events
            - configmaps
            - secrets
            verbs:
            - '*'
          - apiGroups:
            - ""
            resources:
            - namespaces
            verbs:
            - get
          - apiGroups:
            - apps
            resources:
            - deployments
            - daemonsets
            - replicasets
            - statefulsets
            verbs:
            - '*'
          - apiGroups:
            - monitoring.coreos.com
            resources:
            - servicemonitors
            verbs:
            - get
            - create
          - apiGroups:
            - apps
            resourceNames:
            - newrelic-operator
            resources:
            - deployments/finalizers
            verbs:
            - update
          - apiGroups:
            - apm.newrelic.com
            resources:
            - '*'
            verbs:
            - '*'
          serviceAccountName: newrelic-operator
      # Required cluster permissions for the newrelic-agent service account
      # Also includes SCCs required to run on OpenShift
      clusterPermissions:
        - rules:
          - verbs:
              - use
            apiGroups:
              - security.openshift.io
            resources:
              - securitycontextconstraints
            resourceNames:
              - privileged
              - hostaccess
              - hostnetwork
          - nonResourceURLs:
              - /version
              - /healthz
            verbs: 
              - get
          - apiGroups:
              - batch
            resources:
              - jobs
            verbs:
              - get
              - list
              - watch
          - apiGroups: 
              - apps
            resources:
              - deployments
              - replicasets
              - ingresses
            verbs:
              - get
              - list
              - watch
          - apiGroups:
              - ""
            resources:
              - namespaces
              - events
              - services
              - endpoints
              - nodes
              - pods
              - replicationcontrollers
              - componentstatuses
              - resourcequotas
            verbs:
              - get
              - list
              - watch
          - apiGroups:
              - ""
            resources:
              - endpoints
            verbs:
              - create
              - update
              - patch
          serviceAccountName: newrelic-agent
    strategy: deployment
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
  keywords:
    - monitoring
    - apm
  links:
    - name: NewRelic Operator - RHC4TP GitHub
      url: https://github.com/RHC4TP/operators/tree/master/partners/newrelic-operator
    - name: NewRelic Documentation
      url: https://docs.newrelic.com
  maintainers:
    - email: connect@redhat.com
      name: Red Hat Partner Connect
  maturity: alpha
  provider:
    name: Red Hat Partner Connect
  version: 0.0.3
