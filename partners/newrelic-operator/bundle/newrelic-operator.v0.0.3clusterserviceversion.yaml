apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [{
         "apiVersion": "apm.newrelic.com/v1alpha1",
         "kind": "NewRelic",
         "metadata": {
            "name": "example-newrelic"
         },
         "spec": {
            "image": {
               "registry": "registry.access.redhat.com",
               "repository": "newrelic-openshift/newrelic-infrastructure-k8s-1",
               "tag": "latest",
               "pullPolicy": "IfNotPresent"
            },
            "service": {
               "type": "ClusterIP",
               "port": 3306
            },
            "serviceAccountName": "newrelic-operator",
            "resources": {}
         }
      }]
    categories: "Monitoring,OpenShift Optional"
    capabilities: "Basic Install"
    certified: "true"
    containerImage: quay.io/rhc4tp/newrelic-operator:v0.0.3
    createdAt: 2019-04-18T12:59:59Z
    description: Deploy the NewRelic agent from a helm chart onto your Kubernetes or OpenShift cluster
    repository: https://github.com/RHC4TP/operators/tree/master/partners/newrelic-operator
    support: Red Hat Connect
  name: newrelic-operator.v0.0.3
  namespace: "placeholder"
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      - description: NewRelic Example by Red Hat Partner Connect
        displayName: NewRelic Example
        kind: NewRelic
        name: newrelics.apm.newrelic.com
        resources:
          - kind: Deployment
            name: ""
            version: apps/v1
          - kind: Pod
            name: ""
            version: v1
          - kind: Service
            name: ""
            version: v1
          - kind: Secret
            name: ""
            version: v1
          - kind: ConfigMap
            name: ""
            version: v1
        specDescriptors:
          - description: The registry base URL fo NewRelic
            displayName: Registry URL
            path: image.repository
          - description: Registry namespace/repository for NewRelic
            displayName: Image Repository
            path: image.repository
          - description: Container image tag for NewRelic
            displayName: Image Tag
            path: image.tag
          - description: Image pull policy stating whether or not to pull from the local image store
            displayName: Pull Policy
            path: image.pullPolicy
          - description:  Service type to create
            displayName: Service Type
            path: service.type
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes:core:v1:Service'
          - description:  Service port to expose internally
            displayName: Service Port
            path: service.port
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes:core:v1:Service'
          - description: Service account name used to deploy NewRelic
            displayName: Service Account Name
            path: serviceAccountName
          - description: Define resources requests and limits for individual Pods
            displayName: Resource Requirements
            path: resources
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
        statusDescriptors:
          - description: Current deployed state
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'
        version: v1alpha1
  description: |
    This is an Operator for NewRelic, developed using the NewRelic helm chart available at [Newrelic's GitHub](https://github.com/helm/charts/tree/master/stable/newrelic-infrastructure).
    
    The operator will deploy the NewRelic agent (using the helm chart) on your Kubernetes or OpenShift cluster as a Daemonset.

    ## Prerequisites
    The NewRelic Operator will (by default) deploy the latest version of NewRelic Infrastructure from Red Hat Software Collections for RHEL 7.
    The image will pull from the [Red Hat Container Catalog](https://access.redhat.com/containers), which will require the following:

    * RHN account (https://access.redhat.com)
    * RHCC Image pull secret in your project/namespace or [Red Hat Container Registry Authentication](https://access.redhat.com/RegistryAuthentication) setup on your OpenShift cluster

    To create an `rhcc` secret using docker (requires root/sudo or you must be in the docker group):
    ```
    # docker login -u <username> registry.connect.redhat.com
    Password:
    Login Succeeded
    # oc create secret generic rhcc --from-file=.dockerconfigjson=$HOME/.docker/config.json --type=kubernetes.io/dockerconfigjson
    ```

    To create an `rhcc` secret using podman:
    ```
    $ podman login -u <username> registry.connect.redhat.com
    Password:
    Login Succeeded!
    $ oc create secret generic rhcc --from-file=.dockerconfigjson=$XDG_RUNTIME_DIR/containers/auth.json --type=kubernetes.io/dockerconfigjson
    ```

    To link the `rhcc` secret to the `default` service account to use as an image pull secret in the current project/namespace:
    ```
    $ oc secrets link default rhcc --for=pull
    ```

    ## Required Parameters
    There is only one required parameter, and that is the Agent Key available by logging into [NewRelic](https://infrastructure.newrelic.com).
  
    Note that the Agent Key is kept in a base64-encoded K8s Secret, however the key is also visible as plain text within the Custom Resource spec.
      
    Values listed below are relative to the `spec:` field in the Custom Resource.
     
    * **newrelic.agent.key** - Your NewRelic Agent Key

    ## Advanced Features

    This is mostly a TODO section, however you can define your own values as required for the following fields:

    Values are relative to the `spec:` field in the Custom Resource.

    * **image.registry** - The dns hostname of the desired container image registry (defaults to `registry.access.redhat.com`)
    * **image.repository** - The repository path (appended to the registry URL) above where the container image resides (defaults to `rhscl/newrelic-102-rhel`)
    * **image.tag** - The container image tag (defaults to `:latest`)
    * **db.config** - The NewRelic configuration populating `my.cnf` inside the container. Keep in mind that the `rhscl/newrelic-102-rhel` container is hard-coded to expose port 3306 (if you want to change this then you'll have to specify a custom MariaDB container image)
    * **resources** - Define your own Pod resource limits (`limits.cpu` and `limits.memory`)
    * **service.type** - The type of Service to configure for NewRelic (defaults to `ClusterIP`)
    * **service.port** - The TCP port that the Service will listen on    
    * **serviceAccountName** - The name of the service account used to deploy NewRelic (NOTE: This **must** match what is defined in the ClusterServiceVersion)
  displayName: NewRelic Example
  icon:
    - base64data: 
      mediatype: "image/png"
  install:
    spec:
      deployments:
        - name: newrelic-operator
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: newrelic-operator
            template:
              metadata:
                labels:
                  name: newrelic-operator
              spec:
                serviceAccountName: newrelic-operator
                containers:
                  - name: newrelic-operator
                    # Replace this with the built image name
                    image: quay.io/rhc4tp/newrelic-operator:v0.0.3
                    imagePullPolicy: Always
                    env:
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: OPERATOR_NAME
                        value: "newrelic-operator"            
      permissions:
        - rules:
          - apiGroups:
            - ""
            resources:
            - pods
            - services
            - endpoints
            - persistentvolumeclaims
            - events
            - configmaps
            - secrets
            verbs:
            - '*'
          - apiGroups:
            - ""
            resources:
            - namespaces
            verbs:
            - get
          - apiGroups:
            - apps
            resources:
            - deployments
            - daemonsets
            - replicasets
            - statefulsets
            verbs:
            - '*'
          - apiGroups:
            - monitoring.coreos.com
            resources:
            - servicemonitors
            verbs:
            - get
            - create
          - apiGroups:
            - apps
            resourceNames:
            - newrelic-operator
            resources:
            - deployments/finalizers
            verbs:
            - update
          - apiGroups:
            - apm.newrelic.com
            resources:
            - '*'
            verbs:
            - '*' 
          serviceAccountName: newrelic-operator
      # Required to run on OpenShift
      #clusterPermissions:
      #  - rules:
      #      - verbs:
      #          - use
      #        apiGroups:
      #          - security.openshift.io
      #        resources:
      #          - securitycontextconstraints
      #        resourceNames:
      #          - anyuid
      #    serviceAccountName: newrelic-operator
    strategy: deployment
  installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
  keywords:
    - database
    - sql
  links:
    - name: NewRelic Example Operator - RHC4TP GitHub
      url: https://github.com/RHC4TP/operators/tree/master/partners/newrelic-operator
    - name: Partner Guide for Certifying your Operator
      url: https://operators.gitbook.io/partner-guide-for-certifying-your-operator/
  maintainers:
    - email: connect@redhat.com
      name: Red Hat Partner Connect
  maturity: alpha
  provider:
    name: Red Hat Partner Connect
  version: 0.0.3
