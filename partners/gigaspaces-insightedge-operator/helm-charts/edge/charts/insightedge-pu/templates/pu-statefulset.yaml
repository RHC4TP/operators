{{- $root := . -}}

{{if and ($root.Values.partitions) ($root.Values.instances)}}
{{fail "Please use only one - partitions or instances"}}
{{end}}

{{if and ($root.Values.ha) (empty $root.Values.partitions)}}
{{fail "Please define partitions when using HA"}}
{{end}}

{{if and ($root.Values.instances) ($root.Values.antiAffinity.enabled)}}
{{fail "Using instances with anti-affinity is not supported"}}
{{end}}

{{$yamlCount := empty ($root.Values.partitions) | ternary 1 $root.Values.partitions  }}
{{ range $k, $v := until (int ($yamlCount)) }}
---
{{$partitionId:=(add1 $v)}}
{{$suffix:=cat "-" $partitionId | nospace}}
{{$podSuffix := empty ($root.Values.partitions) | ternary "" $suffix }}
{{$haCount:= (and (not (empty $root.Values.ha)) $root.Values.ha) | ternary 2 1 }}
{{$replicaCount:= empty ($root.Values.instances) | ternary $haCount $root.Values.instances }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "insightedge-pu.fullname" $ }}{{$podSuffix}}
  labels:
    app: {{ template "insightedge-pu.name" $ }}
    chart: {{ template "insightedge-pu.chart" $ }}
    release: {{ $root.Release.Name }}
    heritage: {{ $root.Release.Service }}
#statefulset spec
spec:
  serviceName: {{ template "insightedge-pu.fullname" $ }}{{$podSuffix}}
  replicas: {{$replicaCount}}
  selector:
    matchLabels:
      selectorId: {{ template "insightedge-pu.fullname" $ }}{{$podSuffix}}
  template:
    metadata:
      labels:
        app: {{ template "insightedge-pu.name" $ }}
        release: {{ $root.Release.Name }}
        component: space
        selectorId: {{ template "insightedge-pu.fullname" $ }}{{$podSuffix}}
        partitionId: {{$partitionId | quote }}
    #pods spec
    spec:
      initContainers:
        - name: check-manager-ready
          image: "{{ $root.Values.image.repository }}:{{ $root.Values.image.tag }}"
          command: ["tools/kubernetes/entrypoint.sh"]
          args:
            - "component=init"
            - "verbose=true"
            - "name={{ $root.Release.Name }}"
            {{ if ($root.Values.license) }}- "license={{ $root.Values.license}}"{{- end }}
            {{ if ($root.Values.manager.name) }}- "manager.name={{$root.Values.manager.name}}"{{- end }}
            {{ if ($root.Values.manager.ports.api) }}- "manager.ports.api={{$root.Values.manager.ports.api}}"{{- end }}
            {{ if ($root.Values.manager.discoveryTimeoutSeconds) }}- "manager.discoveryTimeoutSeconds={{$root.Values.manager.discoveryTimeoutSeconds}}"{{- end }}
      terminationGracePeriodSeconds: {{ $root.Values.terminationGracePeriodSeconds }}
      containers:
        - name: pu-container
          image: "{{ $root.Values.image.repository }}:{{ $root.Values.image.tag }}"
          imagePullPolicy: {{ $root.Values.image.pullPolicy }}
          env:
          - name: EXT_JAVA_OPTIONS
            value: "{{$root.Values.java.options}}"
          command: ["tools/kubernetes/entrypoint.sh"]
          args:
            - "component=pu"
            - "verbose=true"
            - "name={{ $root.Release.Name }}"
            {{ if ($root.Values.license) }}- "license={{ $root.Values.license}}"{{- end }}
            {{ if ($root.Values.schema) }}- "schema={{ $root.Values.schema}}"{{- end }}
            {{ if ($root.Values.instances) }}- "instances={{ $root.Values.instances}}"{{- end }}
            {{ if ($root.Values.partitions) }}- "partitions={{ $root.Values.partitions}}"{{- end }}
            {{ if ($root.Values.ha) }}- "ha={{ $root.Values.ha}}"{{- end }}
            - "partitionId={{$partitionId}}"
            {{ if ($root.Values.java.heap) }}- "java.heap={{ $root.Values.java.heap}}"{{- end }}
            {{ if ($root.Values.manager.name) }}- "manager.name={{$root.Values.manager.name}}"{{- end }}
            {{ if ($root.Values.manager.ports.api) }}- "manager.ports.api={{$root.Values.manager.ports.api}}"{{- end }}
            {{ if ($root.Values.resourceUrl) }}- "pu.resourceUrl={{$root.Values.resourceUrl}}"{{- end }}
            {{ if ($root.Values.properties) }}- "pu.properties={{$root.Values.properties}}"{{- end }}
          {{ if ($root.Values.livenessProbe.enabled) }}
          livenessProbe:
            httpGet:
              path: /probes/alive
              port: 8089
            initialDelaySeconds: {{$root.Values.livenessProbe.initialDelaySeconds}}
            periodSeconds: {{$root.Values.livenessProbe.periodSeconds}}
            failureThreshold: {{$root.Values.livenessProbe.failureThreshold}}
          {{- end }}
          resources:
{{ toYaml $root.Values.resources | indent 12 }}

    {{- with $root.Values.antiAffinity }}
    {{ if ($root.Values.antiAffinity.enabled) }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: selectorId
                  operator: In
                  values:
                  - {{ template "insightedge-pu.fullname" $ }}{{$podSuffix}}
            topologyKey: "kubernetes.io/hostname"
    {{- end }}
    {{- end }}

{{ end }}
